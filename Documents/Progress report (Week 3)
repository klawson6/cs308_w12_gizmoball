Progress report (Week 3-4)

Tasks done:

- Started work on the GUI - John
-Started working on a basic model to represent Gizmos - Cameron
- Load file basically done, just need some model things implemented for it to work - Mark
- Completed Ball class to represent the moving ball in the game. Ball class has a composing circle field that holds its position and radius, and a Vect to hold its current velocity. Getters are available for use when necessary. Methods have been included and commented with method specifications to modify the velocity, and to modify the position of the ball by replacing its composing circle with a new one, with the position of it computed using the current position values and computed movement in the x and y directions using the velocity and a given move time. -Kyle
- Added methods for applying gravity and friction 
- Created a CollisionDetails class to hold the collision information

Tasks to do next Week (Week 4-5):

- Finish Run GUI and do Build GUI (hopefully) - John
- Create interfaces to allow GUI to get necessary information from model  - Cameron
- Save file. - Mark
- Move the calculation of ball's location each tick into Model and have the moveBall method of ball take a new composing circle as a parameter instead. -Kyle
- Have linear ball motion working on a blank board, this will be the basis of the absorber prototype and collision detection prototype. - Kyle
- Write the Physics loop algorithm in the model, this will handle calculating the ball's new position instead of the calculation occurring in the ball class. -Kyle

Questions:



Challenges:



Changes:

Alter Gizmo abstract class to now be an interface
Add extra fields to gizmo objects to state type of gizmo